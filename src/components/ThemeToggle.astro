---
import SunIcon from "./icons/Sun.astro"
import MoonIcon from "./icons/Moon.astro"

---

<div class="relative ml-1 mr-1">
  <button
    transition:persist
    id="theme-toggle-btn"
    class="appearance-none border-none flex hover:scale-125 transition"
  >
    <span class="sr-only">Elige el tema</span>
    <SunIcon id="light" class="theme-toggle-icon size-5 transition-all" />
    <MoonIcon id="dark" class="theme-toggle-icon absolute size-5 transition-all" />
  </button>
</div>

<style>
  #themes-menu.open {
    display: inline;
    animation: scale-up-center 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
  }

  @keyframes scale-up-center {
    from {
      transform: scale(0.8);
      opacity: 0;
    }

    to {
      transform: scale(1);
      opacity: 1;
    }
  }
</style>

<script is:inline>
  const themeToggleBtn = document.getElementById("theme-toggle-btn")

  // Set default theme to dark
  if (typeof localStorage !== "undefined" && !localStorage.getItem("theme")) {
    localStorage.setItem("theme", "dark")
  }

  const getThemePreference = () => {
    if (typeof localStorage !== "undefined") {
      return localStorage.getItem("theme") ?? "dark"
    }
    return "dark"
  }

  const updateIcon = (themePreference) => {
    document.querySelectorAll(".theme-toggle-icon").forEach((element) => {
      element.style.scale = element.id === themePreference ? "1" : "0"
    })
  }

  const updateTheme = () => {
    const themePreference = getThemePreference()
    const isDark = themePreference === "dark"
    updateIcon(themePreference)
    document.documentElement.classList[isDark ? "add" : "remove"]("dark")
  }

  updateTheme()

  themeToggleBtn.addEventListener("click", (e) => {
    e.stopPropagation()
    const current = getThemePreference()
    const next = current === "dark" ? "light" : "dark"
    localStorage.setItem("theme", next)
    updateTheme()
  })

  document.addEventListener('astro:after-swap', () => {
    updateTheme();
    window.scrollTo({ left: 0, top: 0, behavior: 'instant' });
  })
</script>
